:root {
  --media-player-height-sticky: 10rem; // Small size
  --media-player-height-expanded: 20rem; // Medium size
}

.MediaPlayer {
  background: $gray-darker;
  color: #fff;
  display: flex;
  flex-direction: column;
  height: $media-player-height-mobile;
  overflow-y: hidden;
  padding: $base-unit 5%;
  position: relative;
  z-index: $z-index-media-player;

  @include screen-m {
    height: $media-player-height-desktop;
    padding-bottom: $base-unit * 2;
    padding-top: $base-unit * 1.5;
  }
}

.MediaPlayer-buttons {
  bottom: 0.5rem;
  display: flex;
  position: absolute;
  right: 0.5rem;
}

// Sticky position styles - applied when scrolling below threshold
.Layout.is-sticky .MediaPlayer {
  left: 0;
  padding: 0;
  position: fixed;
  right: 0;
  top: 0;
}

// Small player size styles
.Layout.is-small-player .MediaPlayer {
  flex-direction: row-reverse;
  height: var(--media-player-height-sticky);
  justify-content: flex-end;
  padding: 0;
}

// // Medium player size styles
// .Layout.is-medium-player .MediaPlayer {
//   height: var(--media-player-height-expanded);
// }

// Adjust wrapper content margin based on player size when sticky
.Layout.is-sticky.is-small-player .wrapper-content {
  margin-top: var(--media-player-height-sticky) + $horizontal-tabs-height;
}

.Layout.is-sticky.is-medium-player .wrapper-content {
  margin-top: var(--media-player-height-expanded) + $horizontal-tabs-height;
}

// Sidebar adjustments when sticky
.Layout.is-sticky.sidebar-is-visible .Layout-mediaPlayer,
.Layout.is-sticky.sidebar-is-visible .Layout-contentTabs {
  @include screen-xl {
    right: 36%;
  }
}
